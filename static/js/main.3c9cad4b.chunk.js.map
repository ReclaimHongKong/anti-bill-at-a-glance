{"version":3,"sources":["app/themes/dark.js","app/app.styles.js","app/components/eventList/index.styles.js","app/components/eventItem/index.styles.js","app/components/eventItem/index.js","app/components/eventList/index.js","app/App.js","serviceWorker.js","index.js"],"names":["dark","color","white","black","primary","alert","background","fontSize","xxs","xs","s","m","l","xl","spacing","text","secondary","alternative","inverse","scaleUpBottom","keyframes","_templateObject","Application","styled","div","_templateObject2","props","theme","Header","_templateObject3","Subheader","_templateObject4","Content","_templateObject5","Year","_templateObject6","Month","_templateObject7","EventList","index_styles_templateObject","Day","index_styles_templateObject2","Side","index_styles_templateObject3","index_styles_templateObject4","EventItem","eventItem_index_styles_templateObject","TimelineHeader","eventItem_index_styles_templateObject2","TimelineContent","eventItem_index_styles_templateObject3","ScarificationHeader","eventItem_index_styles_templateObject4","ScarificationContent","index_styles_templateObject5","DemandHeader","index_styles_templateObject6","DemandList","ol","index_styles_templateObject7","DemandItem","li","_templateObject8","ResponseContent","_templateObject9","eventItem","_ref","type","title","content","demands","responder","react_default","a","createElement","toUpperCase","map","demand","index","eventList","month","events","Fragment","Object","keys","date","key","concat","index_styles_Content","event","console","log","components_eventItem","assign","App","data","styled_components_browser_esm","DarkTheme","className","subtitle","year","components_eventList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","app_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3c9cad4b.chunk.js","sourcesContent":["const dark = {\n  color: {\n    white: \"#ffffff\",\n    black: \"#000000\",\n    primary: \"#f9df34\",\n    alert: \"#eb2b3a\",\n    background: \"#120706\"\n  },\n  fontSize: {\n    xxs: 8,\n    xs: 12,\n    s: 16,\n    m: 20,\n    l: 28,\n    xl: 40\n  },\n  spacing: {\n    xxs: 1,\n    xs: 2,\n    s: 4,\n    m: 8,\n    l: 16,\n    xl: 32\n  }\n}\ndark.text = {\n  primary: dark.color.primary,\n  secondary: dark.color.white,\n  alternative: dark.color.alert,\n  inverse: dark.color.black\n}\n\nexport default dark;","import styled, { keyframes } from 'styled-components';\n\n/**\n * Animation\n */\nconst scaleUpBottom = keyframes`\n  0% {\n    transform: scale(0.5);\n    transform-origin: 50% 100%;\n  }\n  100% {\n    transform: scale(1);\n    transform-origin: 50% 100%;\n  }\n`\n\n/**\n * Main components\n */\nexport const Application = styled.div`\n  text-align: left;\n  background-color: ${props => props.theme.color.background};\n  display: flex;\n  max-width: 1200px;\n  flex-direction: column;\n`\n\nexport const Header = styled.div`\n  font-size: 4em;\n  line-height: 0.9;\n  max-width: 800px;\n  color: ${props => props.theme.text.primary}\n  animation: ${scaleUpBottom} 1s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\n`\n\nexport const Subheader = styled.div`\n  margin: 20px 0;\n  padding: 0 20px;\n  background-color: ${props => props.theme.color.primary};\n  font-size: 1.5em;\n  color: ${props => props.theme.text.inverse};\n`\n\nexport const Content = styled.div`\n`\n\nexport const Year = styled.div`\n  color: ${props => props.theme.text.primary}\n  font-size: 1.5em;\n  padding: 0 20px;\n`\n\nexport const Month = styled.div`\n  color: ${props => props.theme.text.primary}\n  font-size: 1.5em;\n  padding: 0 20px;\n`\n\n","import styled from \"styled-components\";\n\nexport const EventList =styled.div`\n  display: flex;\n`\nexport const Day = styled.div`\n  background-color: ${props => props.theme.color.primary};\n  color: ${props => props.theme.text.inverse};\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  font-size: 25px;\n  text-align: center;\n  margin: 0 20px;\n`\n\nexport const Side = styled.div`\n  background: linear-gradient(#fff, #fff) no-repeat center/2px 100%;\n  padding-bottom: 30px;\n`\n\nexport const Content = styled.div`\n`","import styled from \"styled-components\";\n\nexport const EventItem = styled.div`\n  padding-top: 10px;\n  padding-bottom: 20px;\n  color: #ffffff;\n`\n\nexport const TimelineHeader = styled.div`\n  display: inline-flex;\n  padding: 0 5px;\n  background: ${props => props.theme.color.primary};\n  color: ${props => props.theme.text.inverse};\n`\n\nexport const TimelineContent = styled.div`\n  color: ${props => props.theme.text.primary};\n`\n\nexport const ScarificationHeader = styled.div`\n  display: inline-flex;\n  padding: 0 5px;\n  background: ${props => props.theme.text.secondary};\n  color: ${props => props.theme.text.inverse};\n`\n\nexport const ScarificationContent = styled.div`\n  color: ${props => props.theme.text.secondary};\n`\n\nexport const DemandHeader = styled.div`\n  color: ${props => props.theme.text.primary};\n  font-size: 55px;\n  line-height: 0.9;\n`\n\nexport const DemandList = styled.ol`\n  counter-reset: my-counter;\n  list-style: none;\n  background: ${props => props.theme.text.primary};\n  color: ${props => props.theme.text.inverse};\n  margin: 0;\n  padding: 0;\n  width: 350px;\n`\n\nexport const DemandItem = styled.li`\n  counter-increment: my-counter;\n  line-height: 1;\n  display: flex;\n  font-size: 20px;\n  padding: 10px 0;\n\n  &:before {\n    content: counter(my-counter);\n    font-size: 40px;\n    padding: 0 10px;\n  }\n`\n\nexport const ResponseContent = styled.div`\n  color: ${props => props.theme.text.alternative};\n`\n","import React from 'react';\nimport {\n  EventItem,\n  TimelineHeader,\n  TimelineContent,\n  ScarificationHeader,\n  ScarificationContent,\n  DemandHeader,\n  DemandList,\n  DemandItem,\n  ResponseContent\n} from './index.styles';\n\nconst eventItem = ({\n  type,\n  title,\n  content,\n  responder,\n  demands\n}) => {\n  // TODO:\n  switch (type) {\n    case \"scarification\":\n      return (\n        <EventItem>\n          <ScarificationHeader>{title.toUpperCase()}</ScarificationHeader>\n          <ScarificationContent>{content}</ScarificationContent>\n        </EventItem>\n      )\n    case \"demands\":\n      return (\n        <EventItem>\n          <DemandHeader>{title.toUpperCase()}</DemandHeader>\n          <DemandList>\n            {demands.map((demand, index) => {\n              return (<DemandItem>{demand}</DemandItem>)\n          })}\n          </DemandList>\n        </EventItem>\n      )\n    case \"response\":\n      //TODO: generate icon\n      return (\n        <EventItem>\n          <ResponseContent>{content}</ResponseContent>\n        </EventItem>\n      )\n    case \"timeline\":\n      return (\n        <EventItem>\n          {title && <TimelineHeader>{title.toUpperCase()}</TimelineHeader> }\n          <TimelineContent>{content}</TimelineContent>\n        </EventItem>\n      )\n    default:\n      return null;\n  }\n}\n\nexport default eventItem;\n","import React from 'react';\nimport { EventList, Day, Side, Content } from './index.styles';\nimport EventItem from '../eventItem';\n\nconst eventList = ({\n  month,\n  events\n}) => {\n  return (\n    <React.Fragment>\n    {Object.keys(events).map((date, index) => (\n      <EventList key={`eventlist-${index}`}>\n        <Side>\n          <Day>{date}</Day>\n        </Side>\n        <Content>\n          {events[date].map((event, index) => {\n            console.log(event)\n            return (<EventItem {...event} key={`item-${index}`} />)\n          })}\n        </Content>\n      </EventList>\n    ))}\n    </React.Fragment>\n  )\n}\n\nexport default eventList;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport DarkTheme from './themes/dark';\nimport {\n  Application,\n  Header,\n  Subheader,\n  Content,\n  Year,\n  Month\n} from './app.styles';\nimport EventList from './components/eventList';\nimport data from './json/history/en-us.json';\n\nfunction App() {\n  console.log(data);\n  return (\n    <ThemeProvider theme={DarkTheme}>\n      <Application className=\"App\">\n        <Header>{data.title.toUpperCase()}</Header>\n        <Subheader>{data.subtitle.toUpperCase()}</Subheader>\n        <Content>\n          {Object.keys(data.events).map(year => {\n              return (\n                <React.Fragment>\n                  <Year>{year}</Year>\n                  {Object.keys(data.events[year]).map((month, index) => {\n                    return (\n                      <React.Fragment>\n                        <Month>{month}</Month>\n                        <EventList\n                          key={`eventlist-${year}-${month}-${index}`}\n                          month={month}\n                          events={data.events[year][month]}\n                        />\n                      </React.Fragment>\n                    );\n                  })}\n                </React.Fragment>\n              )}\n          )}\n        </Content>\n      </Application>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}